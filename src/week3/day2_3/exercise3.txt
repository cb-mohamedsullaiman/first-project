
*********Write SQL queries for the below questions after loading the sample exercise data. All these queries should be joined with the “students” table to display the student name instead of student_id.*********

1.
Qn:
List the students who didn’t appear for any exams.
Format: name

Ans:
select t2.name from marks t1 inner join students t2 on t1.student_id = t2.id where quarterly is null and half_yearly is null and annual is null;

2.
Qn:
Find the total marks scored by each students in the annual exams. If the student hasn’t appeared for any annual exam, he should still be listed with total marks scored as “0”.
Format: name, marks, year

Ans:
select t2.name, sum(ifnull(t1.annual,0)) as total, t1.year from marks t1 inner join students t2 on t1.student_id = t2.id group by t1.student_id, year;

3.
Qn:
List the students with the total marks scored in quarterly from all the subjects they had appeared during the year 2003.
Format: name, total, grade

Ans:
select t2.name, sum(ifnull(t1.quarterly,0)) as total, t1.grade from marks t1 inner join students t2 on t1.student_id = t2.id where year = 2003 group by t1.student_id, t1.subject_id;

4.
Qn:
List the 9th and 10th grade students who received more than 3 medals.
Format: name, grade, no_of_medals

Ans:
select t2.name, t1.grade, count(t1.student_id) as no_of_medals from medals t1 inner join students t2 on t1.student_id = t2.id where grade in (9,10) group by t1.student_id, t1.grade having count(t1.student_id)>3;

5.
Qn:
List the students who got less than 2 medals. This should also include the students who has not won any medals.
Format: name, grade, no_of_medals

Ans:
select t1.name, max(t2.grade) as grade, count(student_id) as no_of_medals from students t1 left join medals t2 on t1.id = t2.student_id group by t1.id having no_of_medals<2;

6.
Qn:
List the students who has not yet received any medals but scored more than 90 marks in all the subjects in the annual exam for that year.
Format: name, year

Ans:
select t1.name, t2.year from students t1 left join marks on t1.id = t2.student_id where annual>90 and t2.student_id not in (select student_id from medals) group by t2.student_id, t2.year having count(t2.student_id)=5;

7.
Qn:
List the records from the medals table for the students who had won more than 3 medals.
Format: name, game_id, medal_won, year, grade

Ans:
select t1.name, t2.game_id, t2.medal_won, t2.year, t2.grade from students t1 inner join medals t2 on t1.id=t2.student_id where t1.id in ( select student_id from marks group by student_id having count(student_id)>3) group by t2.student_id, t2.game_id, t2.year;

8.
Qn:
List the number of medals and percentage of marks(based on total for the 5 subjects) scored in each year.
Format: name, medals, quarterly_per, half_yearly_per, annual_per, year, grade

Ans:
select t1.name, truncate(ifnull(count(t3.student_id)/count(distinct subject_id),0),0) as medals, avg(t2.quarterly), avg(t2.half_yearly), avg(t2.annual), t2.year, t2.grade from students t1 left join marks t2 on t1.id = t2.student_id left join medals t3 on t2.student_id = t3.student_id and t2.year = t3.year group by t1.id, t2.year;

// count(distinct subject_id may return null so that expression may return null.. but I don't want no of medal to be null

9.
Qn:
Lets assign some rating for the total marks scored - S(450-500), A(400-449), B(350-399), C(300-349), D(250,299), E(200-249), F(below 200). List the students with the grade obtained in each year for each exam(quarterly, half-yearly and annual)
Format: name, quarterly_rating, half_yearly_rating, annual_rating, year, grade

Ans:
select t1.name, case when ifnull(sum(t2.quarterly),0)>=450 then "S" when ifnull(sum(t2.quarterly),0)>=400 then "A" when ifnull(sum(t2.quarterly),0)>=350 then "B" when ifnull(sum(t2.quarterly),0)>=300 then "C" when ifnull(sum(t2.quarterly),0)>=250 then "D" when ifnull(sum(t2.quarterly),0)>=200 then "E" else "F" end as quarterly_rating, case when ifnull(sum(t2.half_yearly),0)>=450 then "S" when ifnull(sum(t2.half_yearly),0)>=400 then "A" when ifnull(sum(t2.half_yearly),0)>=350 then "B" when ifnull(sum(t2.half_yearly),0)>=300 then "C" when ifnull(sum(t2.half_yearly),0)>=250 then "D" when ifnull(sum(t2.half_yearly),0)>=200 then "E" else "F" end as half_yearly_rating, case when ifnull(sum(t2.annual),0)>=450 then "S" when ifnull(sum(t2.annual),0)>=400 then "A" when ifnull(sum(t2.annual),0)>=350 then "B" when ifnull(sum(t2.annual),0)>=300 then "C" when ifnull(sum(t2.annual),0)>=250 then "D" when ifnull(sum(t2.annual),0)>=200 then "E" else "F" end as annual_rating, t2.year, t2.grade  from students t1 left join marks t2 on t1.id=t2.student_id group by t1.id, t2.year;
